export const HappyRedPacketAbi = [
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimed_value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lock",
        type: "bytes32",
      },
    ],
    name: "ClaimSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
      { indexed: false, internalType: "string", name: "name", type: "string" },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creation_time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      { indexed: false, internalType: "bool", name: "ifrandom", type: "bool" },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lock",
        type: "bytes32",
      },
    ],
    name: "CreationSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "bytes32", name: "id", type: "bytes32" },
      {
        indexed: false,
        internalType: "address",
        name: "token_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining_balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lock",
        type: "bytes32",
      },
    ],
    name: "RefundSuccess",
    type: "event",
  },
  {
    inputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
    name: "check_availability",
    outputs: [
      { internalType: "address", name: "token_address", type: "address" },
      { internalType: "uint256", name: "balance", type: "uint256" },
      { internalType: "uint256", name: "total", type: "uint256" },
      { internalType: "uint256", name: "claimed", type: "uint256" },
      { internalType: "bool", name: "expired", type: "bool" },
      { internalType: "uint256", name: "claimed_amount", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "_id", type: "bytes32" },
      { internalType: "bytes32[]", name: "proof", type: "bytes32[]" },
    ],
    name: "claimOrdinaryRedpacket",
    outputs: [{ internalType: "uint256", name: "claimed", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "_id", type: "bytes32" },
      { internalType: "bytes32[]", name: "proof", type: "bytes32[]" },
      { internalType: "uint256[2]", name: "_pA", type: "uint256[2]" },
      { internalType: "uint256[2][2]", name: "_pB", type: "uint256[2][2]" },
      { internalType: "uint256[2]", name: "_pC", type: "uint256[2]" },
    ],
    name: "claimPasswordRedpacket",
    outputs: [{ internalType: "uint256", name: "claimed", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "_merkleroot", type: "bytes32" },
      { internalType: "bytes32", name: "_lock", type: "bytes32" },
      { internalType: "uint256", name: "_number", type: "uint256" },
      { internalType: "bool", name: "_ifrandom", type: "bool" },
      { internalType: "uint256", name: "_duration", type: "uint256" },
      { internalType: "string", name: "_message", type: "string" },
      { internalType: "string", name: "_name", type: "string" },
      { internalType: "uint256", name: "_token_type", type: "uint256" },
      { internalType: "address", name: "_token_addr", type: "address" },
      { internalType: "uint256", name: "_total_tokens", type: "uint256" },
    ],
    name: "create_red_packet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_verifier", type: "address" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    name: "redpacket_by_id",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "packed1", type: "uint256" },
          { internalType: "uint256", name: "packed2", type: "uint256" },
        ],
        internalType: "struct HappyRedPacket.Packed",
        name: "packed",
        type: "tuple",
      },
      { internalType: "bytes32", name: "merkleroot", type: "bytes32" },
      { internalType: "bytes32", name: "lock", type: "bytes32" },
      { internalType: "address", name: "creator", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "id", type: "bytes32" }],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      { internalType: "contract Groth16Verifier", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;
